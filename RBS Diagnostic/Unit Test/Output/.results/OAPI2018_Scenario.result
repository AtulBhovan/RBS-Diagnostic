<?xml version="1.0" encoding="UTF-8"?>
<?totaltestVersion 18.2.3.v20170915-1548_36?>
<!--Topaz for Total Test 18.2.3.v20170915-1548_36 Mar 13, 2018 9:54:09 AM-->
<result:result xmlns:result="http://www.compuware.com/model/xml/result"><result:testsuite errorCount="1" failureCount="0" testCount="31" testsuite="platform:/resource/dt0313-2/Unit%20Test/Output/Last%20Execution/OAPI2018_Scenario.archive#Unit%20Test%5C.temp/OAPI2018_Scenario.testsuite"><result:testscenarios errorCount="1" failureCount="0" testCount="31" testscenario="platform:/resource/dt0313-2/Unit%20Test/Output/Last%20Execution/OAPI2018_Scenario.archive#Unit%20Test/Scenarios/OAPI2018_Scenario.testscenario"><result:testcases errorCount="0" failureCount="0" testCount="31" testcase="platform:/resource/dt0313-2/Unit%20Test/Output/Last%20Execution/OAPI2018_Scenario.archive#Unit%20Test/Scenarios/OAPI2018_Scenario.testscenario%23OAPI2018Case1"><result:results expectedAssert="=" expectedValue="365" expression="BigDecimalCreator.make('365').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_INPUT_PARMS.LS_BOAPI218_BANK_ID) eq 0" name="Check for LS_BOAPI218_BANK_ID" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_INPUT_PARMS.LS_BOAPI218_SORT_CODE) eq 0" name="Check for LS_BOAPI218_SORT_CODE" result="Success"/><result:results expectedAssert="=" expectedValue="Q" expression="'Q' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_INPUT_PARMS.LS_BOAPI218_REQ_TYPE" name="Check for LS_BOAPI218_REQ_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="M1" expression="'M1' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_INPUT_PARMS.LS_BOAPI218_ACCOUNT_TYPE" name="Check for LS_BOAPI218_ACCOUNT_TYPE" result="Success"/><result:results expectedAssert="=" expectedValue="J" expression="'J' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_INPUT_PARMS.LS_BOAPI218_REQ_TYPE_FLAG" name="Check for LS_BOAPI218_REQ_TYPE_FLAG" result="Success"/><result:results expectedAssert="=" expectedValue="x'404000079C00001C00001C404040404040404040404040404040403640400000000040000000004040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040'" expression="x'404000079C00001C00001C404040404040404040404040404040403640400000000040000000004040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_INPUT_PARMS.FILLER0" name="Check for FILLER0" result="Success"/><result:results expectedAssert="=" expectedValue="B" expression="'B' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_INPUT_PARMS.LS_BOAPI218_ENV_FLAG" name="Check for LS_BOAPI218_ENV_FLAG" result="Success"/><result:results expectedAssert="=" expectedValue="2018-03-13" expression="'2018-03-13' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_INPUT_PARMS.LS_BOAPI218_EFDT" name="Check for LS_BOAPI218_EFDT" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_RETURN_CODE) eq 0" name="Check for LS_BOAPI218_RETURN_CODE" result="Success"/><result:results expectedAssert="=" expectedValue="x'404040404040404040404040404040404040404040404040404000000C00000C4040404040404040404040404040404040404040404040404040404040404040404040404040'" expression="x'404040404040404040404040404040404040404040404040404000000C00000C4040404040404040404040404040404040404040404040404040404040404040404040404040' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_ERROR_MSG_1" name="Check for LS_BOAPI218_ERROR_MSG_1" result="Success"/><result:results expectedAssert="=" expectedValue="Y" expression="'Y' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_RESULT" name="Check for LS_BOAPI218_RESULT" result="Success"/><result:results expectedAssert="=" expectedValue="J" expression="'J' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_RESULT_FLAG" name="Check for LS_BOAPI218_RESULT_FLAG" result="Success"/><result:results expectedAssert="=" expectedValue="x'000000000C000C00000000000C001C0C000C000C000C000C000C4040404040404040F0F0F0F04040002500000C404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040'" expression="x'000000000C000C00000000000C001C0C000C000C000C000C000C4040404040404040F0F0F0F04040002500000C404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_QUERY_AREA" name="Check for LS_BOAPI218_QUERY_AREA" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_QUERY_VALUES.LS_BOAPI218_PROFILE_VALUES.LS_BOAPI218_OUP_SC_ISS_AUTH) eq 0" name="Check for LS_BOAPI218_OUP_SC_ISS_AUTH" result="Success"/><result:results expectedAssert="=" expectedValue="1" expression="BigDecimalCreator.make('1').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_QUERY_VALUES.LS_BOAPI218_PROFILE_VALUES.LS_BOAPI218_OUP_GEOG_ZONE_ID) eq 0" name="Check for LS_BOAPI218_OUP_GEOG_ZONE_ID" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_QUERY_VALUES.LS_BOAPI218_PAYU_FLAG" name="Check for LS_BOAPI218_PAYU_FLAG" result="Success"/><result:results expectedAssert="=" expectedValue="x'0C000C000C000C4040404040404040'" expression="x'0C000C000C000C4040404040404040' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_QUERY_VALUES.LS_BOAPI218_TXT_VAL" name="Check for LS_BOAPI218_TXT_VAL" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_QUERY_VALUES.LS_BOAPI218_RISK_VAL) eq 0" name="Check for LS_BOAPI218_RISK_VAL" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_QUERY_VALUES.LS_BOAPI218_CON_CAP_VAL) eq 0" name="Check for LS_BOAPI218_CON_CAP_VAL" result="Success"/><result:results expectedAssert="=" expectedValue="25000.00" expression="BigDecimalCreator.make('25000.00').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_QUERY_VALUES.LS_BOAPI218_CCA_UPR_LIM) eq 0" name="Check for LS_BOAPI218_CCA_UPR_LIM" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.LS_BOAPI218_COMP_THRSHLD) eq 0" name="Check for LS_BOAPI218_COMP_THRSHLD" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.LS_BOAPI218_THSH_TERM) eq 0" name="Check for LS_BOAPI218_THSH_TERM" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.LS_BOAPI218_COMP_RATE_LWR) eq 0" name="Check for LS_BOAPI218_COMP_RATE_LWR" result="Success"/><result:results expectedAssert="=" expectedValue="x'00'" expression="x'00' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.LS_BOAPI218_ES_LET_REQ" name="Check for LS_BOAPI218_ES_LET_REQ" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.LS_BOAPI218_FWD_DUR) eq 0" name="Check for LS_BOAPI218_FWD_DUR" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.LS_BOAPI218_QT_ACT_PRD) eq 0" name="Check for LS_BOAPI218_QT_ACT_PRD" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.LS_BOAPI218_PEN_INT_PRD) eq 0" name="Check for LS_BOAPI218_PEN_INT_PRD" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.LS_BOAPI218_PEN_INT_ORG_TRM) eq 0" name="Check for LS_BOAPI218_PEN_INT_ORG_TRM" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.LS_BOAPI218_PEN_INT_EXT_PRD) eq 0" name="Check for LS_BOAPI218_PEN_INT_EXT_PRD" result="Success"/><result:results expectedAssert="=" expectedValue="x'4040404040404040F0F0F0F04040002500000C404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040'" expression="x'4040404040404040F0F0F0F04040002500000C404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040404040' eq output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_CCD_VARS_PARMS.FILLER3" name="Check for FILLER3" result="Success"/><result:results expectedAssert="=" expectedValue="0" expression="BigDecimalCreator.make('0').compareTo(output.arg0.LS_BOAPI218_COMMAREA.LS_BOAPI218_OUTPUT_PARMS.LS_BOAPI218_OUTPUT_DATA.LS_BOAPI218_LST_CTR) eq 0" name="Check for LS_BOAPI218_LST_CTR" result="Success"/></result:testcases><result:testcases errorCount="1" testcase="platform:/resource/dt0313-2/Unit%20Test/Output/Last%20Execution/OAPI2018_Scenario.archive#Unit%20Test/Scenarios/OAPI2018_Scenario.testscenario%23OAPI2018Case2"><result:results message="Testcase has no output or output is empty." name="Testcase incomplete" result="Error"/></result:testcases></result:testscenarios></result:testsuite></result:result>